// Add Mega Bezel Params & Initial Prep
//      Add Mega Bezel parameters at the beginning of the list for easy access
//      Add Color Correction
//      Calculate Average Luminance and put in alpha channel
//      Debug Drawing of the resolution & screen scaling info
shader0 = ../bezel/shaders/HyperspaceMadness/hsm-prep-initial-screen-scale-only-royale.slang
alias0  = AvgLumPass

// Linearize the input based on CRT gamma and bob interlaced fields.
shader1 = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/src/crt-royale-first-pass-linearize-crt-gamma-bob-fields.slang"
alias1 = "ORIG_LINEARIZED"
filter_linear1 = "false"
scale_type1 = "source"
scale1 = "1.0"
srgb_framebuffer1 = "true"

// Resample interlaced (and misconverged) scanlines vertically.
shader2 = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/src/crt-royale-scanlines-vertical-interlacing.slang"
alias2 = "VERTICAL_SCANLINES"
filter_linear2 = "true"
scale_type_x2 = "source"
scale_x2 = "1.0"
scale_type_y2 = "viewport"
scale_y2 = "1.0"
srgb_framebuffer2 = "true"

// Do a small resize blur of ORIG_LINEARIZED at an absolute size, and
// account for convergence offsets.
shader3 = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/src/crt-royale-bloom-approx.slang"
alias3 = "BLOOM_APPROX"
filter_linear3 = "true"
scale_type3 = "absolute"
scale_x3 = "320"
scale_y3 = "240"
srgb_framebuffer3 = "true"

// Blur the input for halation and refractive diffusion.
shader4 = "../blurs/blur9x9.slang"
alias4 = "HALATION_BLUR"
filter_linear4 = "true"
scale_type4 = "source"
scale4 = "1.0"
srgb_framebuffer4 = "true"

// Lanczos-resize the phosphor mask vertically.
shader5 = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/src/crt-royale-mask-resize-vertical.slang"
filter_linear5 = "true"
scale_type_x5 = "absolute"
scale_x5 = "64"
scale_type_y5 = "viewport"
scale_y5 = "0.0625" // Safe for >= 341.333 horizontal triads at viewport size
#srgb_framebuffer5 = "false" // mask_texture is already assumed linear

// Lanczos-resize the phosphor mask horizontally.
shader6 = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/src/crt-royale-mask-resize-horizontal.slang"
filter_linear6 = "false"
scale_type_x6 = "viewport"
scale_x6 = "0.0625"
scale_type_y6 = "source"
scale_y6 = "1.0"
#srgb_framebuffer6 = "false" // mask_texture is already assumed linear
alias6 = "MASK_RESIZE"

// Resample (misconverged) scanlines horizontally, apply halation, and
// apply the phosphor mask.
shader7 = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/src/crt-royale-scanlines-horizontal-apply-mask.slang"
filter_linear7 = "true" // This could just as easily be nearest neighbor.
scale_type7 = "viewport"
scale7 = "1.0"
srgb_framebuffer7 = "true"
alias7 = "MASKED_SCANLINES"

// Compute a brightpass.  This will require reading the final mask.
shader8 = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/src/crt-royale-brightpass.slang"
filter_linear8 = "true" // This could just as easily be nearest neighbor.
scale_type8 = "viewport"
scale8 = "1.0"
srgb_framebuffer8 = "true"
alias8 = "BRIGHTPASS"

// Blur the brightpass vertically
shader9 = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/src/crt-royale-bloom-vertical.slang"
filter_linear9 = "true" // This could just as easily be nearest neighbor.
scale_type9 = "source"
scale9 = "1.0"
srgb_framebuffer9 = "true"

// Blur the brightpass horizontally and combine it with the dimpass:
shader10 = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/src/crt-royale-bloom-horizontal-reconstitute.slang"
filter_linear10 = "true"
srgb_framebuffer10 = "true"
scale_type10 = "source"
scale10 = "1.0"
wrap_mode10 = mirrored_repeat

// Curvature
shader11 = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/src/hsm-crt-royale-geometry-aa-last-pass-mask-outside-screen.slang"
mipmap_input11 = true
filter_linear11 = true
float_framebuffer11 = true
wrap_mode11 = mirrored_repeat
alias11 = BR_CRTPass

shaders = "12"


// Define textures to be used by the different passes
textures = "mask_grille_texture_small;mask_slot_texture_small;mask_shadow_texture_small;SamplerLUT3;ColoredGelImage;"

mask_grille_texture_small = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/TileableLinearApertureGrille15Wide8And5d5SpacingResizeTo64.png"
mask_grille_texture_small_wrap_mode = "repeat"
mask_grille_texture_small_linear = "true"
mask_grille_texture_small_mipmap = "false"  // Mipmapping causes artifacts with manually resized masks without tex2Dlod

mask_slot_texture_small = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/TileableLinearSlotMaskTall15Wide9And4d5Horizontal9d14VerticalSpacingResizeTo64.png"
mask_slot_texture_small_wrap_mode = "repeat"
mask_slot_texture_small_linear = "true"
mask_slot_texture_small_mipmap = "false"    // Mipmapping causes artifacts with manually resized masks without tex2Dlod

mask_shadow_texture_small = "../bezel/shaders/HyperspaceMadness/hsm-crt-royale/TileableLinearShadowMaskEDPResizeTo64.png"
mask_shadow_texture_small_wrap_mode = "repeat"
mask_shadow_texture_small_linear = "true"
mask_shadow_texture_small_mipmap = "false"  // Mipmapping causes artifacts with manually resized masks without tex2Dlod

SamplerLUT3 = ../bezel/shaders/HyperspaceMadness/textures/lut/other1_32.png
SamplerLUT3_linear = true
ColoredGelImage = ../bezel/shaders/HyperspaceMadness/textures/Transparent_DummyTexture_16x16.png

parameters = "HSS_MEGA_BEZEL_DEBUG;HSS_FLIP_VIEWPORT_AND_CORE_VERTICAL;HSS_ROTATE_CORE_IMAGE;HSS_ASPECT_RATIO_ORIENTATION;HSS_ASPECT_RATIO_MODE;HSS_ASPECT_RATIO_EXPLICIT;HSS_INT_SCALE_MODE;HSS_INT_SCALE_MULTIPLE_OFFSET;HSS_INT_SCALE_MULTIPLE_OFFSET_LONG;HSS_INT_SCALE_BORDER_MIN_HEIGHT;HSS_NON_INTEGER_SCALE;HSS_SCANLINE_DIRECTION;HSS_CORE_RES_SAMPLING_MULT_SCANLINE_DIR;HSS_CORE_RES_SAMPLING_MULT_OPPOSITE_DIR;HSS_INTERLACE_TRIGGER_RES;HSS_POSITION_OFFSET_X;HSS_POSITION_OFFSET_Y;HSS_CROP_OVERSCAN_TOP;HSS_CROP_OVERSCAN_BOTTOM;HSS_CROP_OVERSCAN_LEFT;HSS_CROP_OVERSCAN_RIGHT;HSS_CURVATURE_MODE;HSS_CURVATURE_3D_RADIUS;HSS_CURVATURE_3D_VIEW_DIST;HSS_CURVATURE_3D_TILT_ANGLE_X;HSS_CURVATURE_3D_TILT_ANGLE_X;HSS_CURVATURE_3D_TILT_ANGLE_Y;HSS_CURVATURE_2D_SCALE_LONG_AXIS;HSS_CURVATURE_2D_SCALE_SHORT_AXIS;HSS_COLOR_CRT_PROFILE;HSS_COLOR_SPACE;HSS_COLOR_TEMPERATURE;HSS_COLOR_SATURATION;HSS_COLOR_LUMINANCE;HSS_COLOR_BLACK_LEVEL;HSS_COLOR_NEGATIVE_CROP_BRIGHTNESS;HSS_COLOR_CRT_GAMMA;HSS_PHOSPHOR_PERSISTENCE;HSS_SCREENFX_CORNER_RADIUS;HSS_SCREENFX_EDGE_SHARPNESS;HSS_SCREENFX_VIGNETTE;HSS_SCREENFX_FAKE_SCANLINE_OPACITY;HSS_TUBE_BLACK_EDGE_THICKNESS;HSS_TUBE_CURVATURE_SCALE;halation_weight;diffusion_weight;bloom_underestimate_levels;bloom_excess;beam_min_sigma;beam_max_sigma;beam_spot_power;beam_min_shape;beam_max_shape;beam_shape_power;beam_horiz_filter;beam_horiz_sigma;beam_horiz_linear_rgb_weight;mask_type;mask_specify_num_triads;mask_triad_size_desired;mask_num_triads_desired;aa_cubic_c;aa_gauss_sigma;geom_overscan_x;geom_overscan_y;interlace_detect_toggle"

// HSS_MEGA_BEZEL_DEBUG = 0

// HSS_FLIP_VIEWPORT_AND_CORE_VERTICAL = 0
// HSS_ROTATE_CORE_IMAGE = 0

// HSS_ASPECT_RATIO_ORIENTATION = 0
// HSS_ASPECT_RATIO_MODE = 0
// HSS_ASPECT_RATIO_EXPLICIT = 1.3333
// HSS_CORE_RES_SAMPLING_MULT_SCANLINE_DIR = 1
// HSS_CORE_RES_SAMPLING_MULT_OPPOSITE_DIR = 1

// HSS_INT_SCALE_MODE = 0
// HSS_INT_SCALE_MULTIPLE_OFFSET = 0
// HSS_INT_SCALE_MULTIPLE_OFFSET_LONG = 0
// HSS_INT_SCALE_BORDER_MIN_HEIGHT = 5.5
// HSS_NON_INTEGER_SCALE = 82.97
// HSS_SNAP_TO_INT_SCALE_TOLERANCE = 0.1

// HSS_SCANLINE_DIRECTION = 0
// HSS_INTERLACE_TRIGGER_RES = 600

// HSS_CROP_OVERSCAN_TOP = 0
// HSS_CROP_OVERSCAN_BOTTOM = 0
// HSS_CROP_OVERSCAN_LEFT = 0
// HSS_CROP_OVERSCAN_RIGHT = 0

// HSS_POSITION_OFFSET_X = 0
// HSS_POSITION_OFFSET_Y = 0

HSS_CURVATURE_MODE = 1
// HSS_CURVATURE_3D_RADIUS = 2
// HSS_CURVATURE_3D_VIEW_DIST = 2
// HSS_CURVATURE_3D_TILT_ANGLE_X = 0
// HSS_CURVATURE_3D_TILT_ANGLE_Y = 0
HSS_CURVATURE_2D_SCALE_LONG_AXIS = 0
HSS_CURVATURE_2D_SCALE_SHORT_AXIS = 0

HSS_COLOR_CRT_PROFILE = 5
// HSS_COLOR_SPACE = 0
// HSS_COLOR_TEMPERATURE = -50
// HSS_COLOR_SATURATION = 1
// HSS_COLOR_LUMINANCE = 100
// HSS_COLOR_BLACK_LEVEL = -0.1
// HSS_COLOR_NEGATIVE_CROP_BRIGHTNESS = 0.05
// HSS_COLOR_CRT_GAMMA = 2.4

// HSS_PHOSPHOR_PERSISTENCE = 0

// HSS_SCREENFX_CORNER_RADIUS = 10
// HSS_SCREENFX_EDGE_SHARPNESS = 0.4
// HSS_SCREENFX_VIGNETTE = 0
// HSS_SCREENFX_FAKE_SCANLINE_OPACITY = 0.7

// HSS_TUBE_BLACK_EDGE_THICKNESS = 1.2
// HSS_TUBE_CURVATURE_SCALE = 1

// halation_weight = 0
// diffusion_weight = 0.075
// bloom_underestimate_levels = 0.8
// bloom_excess = 0
// beam_min_sigma = 0.02
// beam_max_sigma = 0.3
// beam_spot_power = 0.33
// beam_min_shape = 2
// beam_max_shape = 4
// beam_shape_power = 0.25
// beam_horiz_filter = 0
// beam_horiz_sigma = 0.35
// beam_horiz_linear_rgb_weight = 1
// mask_type = 1
// mask_specify_num_triads = 0
// mask_triad_size_desired = 3
// mask_num_triads_desired = 480
// aa_cubic_c = 0.5
// aa_gauss_sigma = 0.5
// geom_overscan_x = 1
// geom_overscan_y = 1
// interlace_detect_toggle = 0