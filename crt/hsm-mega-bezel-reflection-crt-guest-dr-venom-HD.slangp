// Add Mega Screen Scale Params & Initial Prep
//      Add the mega-screen-scale parameters at the beginning of the list for easy access
//      Add Afterglow, Black Level & Gamma
//      Calculate Average Luminance and put in alpha channel
//      Debug Drawing of the resolution/screen scaling
shader0 = ../crt/shaders/HyperspaceMadness/hsm-prep-initial.slang
float_framebuffer0 = true
alias0  = AvgLumPass

// De-Dithering - Mdapt
shader1 = ../crt/shaders/HyperspaceMadness/hsm-mdapt/hsm-mdapt-pass0.slang
shader2 = ../crt/shaders/HyperspaceMadness/hsm-mdapt/hsm-mdapt-pass1.slang
shader3 = ../crt/shaders/HyperspaceMadness/hsm-mdapt/hsm-mdapt-pass2.slang
shader4 = ../crt/shaders/HyperspaceMadness/hsm-mdapt/hsm-mdapt-pass3.slang
shader5 = ../crt/shaders/HyperspaceMadness/hsm-mdapt/hsm-mdapt-pass4.slang

// GTU TV Processing
shader6 = ../crt/shaders/HyperspaceMadness/hsm-gtu/hsm-gtu-pass1.slang
scale_type6 = source
scale6 = 1.0
float_framebuffer6 = true

shader7 = ../crt/shaders/HyperspaceMadness/hsm-gtu/hsm-gtu-pass2.slang
scale_type_x7 = source
scale_x7 = 1.0
scale_type_y7 = source
scale_y7 = 1.0
filter_linear7 = true
float_framebuffer7 = true

// //NTSC passes added here so you can swap out with GTU
// shader6 = ../crt/shaders/HyperspaceMadness/hsm-ntsc-adaptive/hsm-ntsc-pass1.slang
// scale_type6 = source
// scale_x6 = 4.0
// filter_linear6 = false
// float_framebuffer6 = true

// shader7 = ../crt/shaders/HyperspaceMadness/hsm-ntsc-adaptive/hsm-ntsc-pass2.slang
// scale_type7 = source
// scale_x7 = 0.25
// filter_linear7 = false

shader8 = ../stock.slang
shader9 = ../stock.slang
shader10 = ../stock.slang
shader11 = ../stock.slang
shader12 = ../stock.slang

shader13 = ../stock.slang
alias13 = WhitePointPass

// Linearize Color ----------------------------------------------------------------
shader14 = ../crt/shaders/HyperspaceMadness/hsm-guest/hsm-guest-linearize.slang
filter_linear14 = false
scale_type14 = source
scale14 = 1.0
float_framebuffer14 = true
alias14 = LinearizePass

// Guest-Venom Pass ----------------------------------------------------------------
shader15 = ../crt/shaders/HyperspaceMadness/hsm-guest/hsm-guest-blur_horiz.slang
filter_linear15 = false
scale_type15 = source
scale15 = 1.0
float_framebuffer15 = true

// Guest-Venom Pass ----------------------------------------------------------------
shader16 = ../crt/shaders/HyperspaceMadness/hsm-guest/hsm-guest-blur_vert.slang
filter_linear16 = false
scale_type16 = source
scale16 = 1.0
float_framebuffer16 = true
alias16 = GlowPass

// Guest-Venom Pass ----------------------------------------------------------------
shader17 = ../crt/shaders/HyperspaceMadness/hsm-guest/hsm-guest-linearize_scanlines.slang
filter_linear17 = true
scale_type17 = source
scale17 = 1.0
float_framebuffer17 = true

// CRT Shader - Guest-Venom ----------------------------------------------------------------
//      Guest's Awesome Shader!!!
//      Has been slightly altered to use the same scaling as the rest of the shders for the bezel & reflection
shader18 = ../crt/shaders/HyperspaceMadness/hsm-guest/hsm-crt-guest-dr-venom-with-scaling.slang
mipmap_input18 = true
filter_linear18 = true
scale_type18 = viewport
scale18 = 1.0
float_framebuffer18 = true
wrap_mode18 = mirrored_repeat
alias18 = BR_CRTPass

// Tube Scale Curvature Mapping
// Write mapping into the pass, of the 4 channels, x & y are tube warped coord and z & w are outside tube mask and edge mask
shader19 = ../crt/shaders/HyperspaceMadness/hsm-curvature-mapping.slang
mipmap_input19 = true
filter_linear19 = true
scale_type19 = viewport
float_framebuffer19 = true
alias19 = BR_MappingPass

// Reduce Resolution  ----------------------------------------------------------------
//      Reduce the resolution to a small static size regardless of final resolution
//      Allows consistent look and faster at different final resolutions for blur
//      Mipmap option allows downscaling without artifacts
shader20 = ../crt/shaders/HyperspaceMadness/hsm-linearize-crt.slang
mipmap_input20 = true
filter_linear20 = true
scale_type20 = absolute
float_framebuffer20 = true
// scale_x20 = 480
// scale_y20 = 270
// scale_x20 = 960
// scale_y20 = 540
scale_x20 = 800
scale_y20 = 600
wrap_mode20 = mirrored_repeat
float_framebuffer20 = true
alias20 = BR_MirrorLowResPass

// Add Blur for the Reflection (Horizontal) ----------------------------------------------------------------
shader21 = ../crt/shaders/HyperspaceMadness/hsm-blur-outside-screen-horiz.slang
mipmap_input21 = true
filter_linear21 = true
float_framebuffer21 = true
scale_type22 = source
wrap_mode21 = mirrored_repeat

// Add Blur for the Reflection (Vertical) ----------------------------------------------------------------
shader22 = ../crt/shaders/HyperspaceMadness/hsm-blur-outside-screen-vert.slang
filter_linear22 = false
scale_type22 = source
float_framebuffer22 = true
wrap_mode22 = mirrored_repeat
alias22 = BR_MirrorBlurredPass

// Reduce resolution ----------------------------------------------------------------
// Reduced to a very small amount so we can create a blur which will create a glow from the screen
//      Mipmap option allows smoother downscaling
shader23 = ../blurs/blur9x9.slang
mipmap_input23 = true
filter_linear23 = true
scale_type23 = absolute
float_framebuffer23 = true
scale_x23 = 128
scale_y23 = 128
wrap_mode23 = mirrored_repeat
alias23 = BR_MirrorReflectionDiffusedPass

// Add Diffused glow all around the screen ----------------------------------------------------------------
//      lurred so much that it's non directional
//      Mipmap option allows downscaling without artifacts
shader24 = ../blurs/blur9x9.slang
mipmap_input24 = true
filter_linear24 = true
scale_type24 = absolute
float_framebuffer24 = true
scale_x24 = 12
scale_y24 = 12
wrap_mode24 = mirrored_repeat
alias24 = BR_MirrorFullscreenGlowPass

// Bezel Generation & Reflection ----------------------------------------------------------------
//      Uses these previous passes:
//          BR_CRTPass
//          BR_MirrorBlurredPass
//          BR_MirrorReflectionDiffusedPass
//          BR_MirrorFullscreenGlowPass
//      Blur passes are in linearized color space, and CRT Pass already has gamma encoded in it
//
//      Uses these textures
            // BackgroundImage
            // BackgroundVertImage
            // TubeGlassImage
            // TopLayerImage
            // TopLayerVertImage

shader25 = ../crt/shaders/HyperspaceMadness/hsm-mega-bezel-reflection.slang
mipmap_input25 = true
filter_linear25 = true
scale_type25 = viewport
float_framebuffer25 = false

// Define how many shaders will be used from this list
shaders = 26


// Define textures to be used by the different passes
textures = "SamplerLUT3;BackgroundImage;BackgroundVertImage;TubeGlassImage;TopLayerImage;TopLayerVertImage;"
SamplerLUT3 = ../crt/shaders/guest/lut/other1.png
SamplerLUT3_linear = true

BackgroundImage = ../crt/shaders/HyperspaceMadness/textures/BackgroundImage_3840x2160.png
BackgroundVertImage = ../crt/shaders/HyperspaceMadness/textures/BackgroundImage_3840x2160.png
TubeGlassImage = ../crt/shaders/HyperspaceMadness/textures/TubeGlassOverlayImage_3840x2160.png
TopLayerImage = ../crt/shaders/HyperspaceMadness/textures/TopLayerImage_3840x2160.png
TopLayerVertImage = ../crt/shaders/HyperspaceMadness/textures/TopLayerImage_3840x2160.png

parameters = "interlace_mode;hmss_mega_screen_scale_on;hmss_screen_aspect_ratio;hmss_integer_scale_mode;hmss_int_scale_multiple_offset;hmss_non_integer_scale;hmss_int_scale_border_min_height;hmss_scanline_direction;hmss_curvature_mode;hmss_curvature_2D_long_axis;hmss_curvature_2D_short_axis;hmss_curvature_3D_radius;hmss_curvature_3D_view_dist;hmss_curvature_3D_tilt_angle_x;hmss_curvature_3D_tilt_angle_y;hmss_screenfx_corner_radius;hmss_screenfx_fake_scanline_opacity;hmss_tube_black_edge_thickness;hmss_screenfx_edge_sharpness;hmbz_tube_glass_image_opacity;hmbz_tube_edge_shadow;hmbz_background_image_aspect_ratio;hmbz_background_image_tube_height;hmbz_background_image_vignette_opacity;hmbz_bezel_inner_corner_radius_scale;hmbz_background_image_opacity;hmbz_bezel_opacity;hmbz_bezel_width;hmbz_bezel_height;hmbz_bezel_color_hue;hmbz_bezel_color_saturation;hmbz_bezel_color_value;hmbz_bezel_color_blend_with_image;hmbz_bezel_brightness;hmbz_bezel_highlight;hmbz_bezel_noise;hmbz_frame_opacity;hmbz_frame_thickness;hmbz_background_image_scale_mode;hmss_crop_overscan_top;hmss_crop_overscan_bottom;hmss_crop_overscan_left;hmss_crop_overscan_right;hmss_color_black_level;hbl_blur_min;hbl_blur_max;hbr_global_amount;hbr_global_gamma_adjust;hbr_inner_edge_reflection;hbr_inner_edge_fullscreen_glow;hbr_diffused_reflection;hbr_fullscreen_glow;hbr_fullscreen_glow_gamma;hag_afterglow_persistence;hbr_noise_samples;hbr_noise_amount;hbr_noise_sample_distance;hbr_fade_amount;hbr_radial_fade_width;hbr_radial_fade_height;hbr_lateral_outer_fade_position;hbr_lateral_outer_fade_distance;hbr_corner_fade;hbr_corner_inner_spread;hbr_corner_outer_spread"

interlace_mode = 3;

hmss_mega_screen_scale_on = 1
hmss_screen_aspect_ratio = 1.777
// hmss_integer_scale_mode = 1
// hmss_int_scale_multiple_offset = 0
// hmss_non_integer_scale = 83
hmss_int_scale_border_min_height = 5.5
// hmss_scanline_direction = 0

////-- Curvature --////
// hmss_curvature_mode = 1
// hmss_curvature_2D_long_axis = 0
// hmss_curvature_2D_short_axis = 0
// hmss_curvature_3D_radius = 2
// hmss_curvature_3D_view_dist = 2
// hmss_curvature_3D_tilt_angle_x = 0
// hmss_curvature_3D_tilt_angle_y = 0

hmss_screenfx_corner_radius = 10
hmss_screenfx_fake_scanline_opacity = 0.7

// hmss_tube_black_edge_thickness = -0.2

// hmbz_bezel_width = 200
// hmbz_bezel_height = 200

// hmbz_background_image_opacity = 0
// hmbz_bezel_opacity = 0
// hmbz_bezel_color_hue = 0
// hmbz_bezel_color_saturation = 0
// hmbz_bezel_color_value = 0
// hmbz_bezel_color_blend_with_image = 1

// hmbz_bezel_brightness = 40
// hmbz_bezel_highlight = 50
// hmbz_bezel_noise = 0

// hmbz_tube_glass_image_opacity = 5
// hmbz_frame_opacity = 0
// hmbz_frame_thickness = 7;

// hmbz_background_image_scale_mode = 0
// hmbz_background_image_aspect_ratio = 1.77
// hmbz_background_image_tube_height = 69
// hmbz_background_image_vignette_opacity = 0.4

// hmss_crop_overscan_top = 0
// hmss_crop_overscan_bottom = 0
// hmss_crop_overscan_left = 0
// hmss_crop_overscan_right = 0
// hmss_color_black_level = 0

// hmss_screenfx_edge_sharpness = 1
// hmbz_tube_edge_shadow = 0
// hmbz_bezel_inner_corner_radius_scale = 1


// hbl_blur_min = 0.3
// hbl_blur_max = 0.6

// hbr_noise_amount = 1
// hbr_noise_samples = 4
// hbr_noise_sample_distance = 0.15

// hbr_global_amount = 0.5
// hbr_global_gamma_adjust = 0.9
// hbr_inner_edge_reflection = 0.6
// hbr_inner_edge_fullscreen_glow = 0.4
// hbr_diffused_reflection = 0
// hbr_fullscreen_glow = 30
// hbr_fullscreen_glow_gamma = 1.5
// hbr_fade_amount = 0.2
// hbr_radial_fade_width = 500
// hbr_radial_fade_height = 300
// hbr_lateral_outer_fade_position = 500
// hbr_lateral_outer_fade_distance = 20
// hbr_corner_fade = 10
// hbr_corner_inner_spread = 0
// hbr_corner_outer_spread = 0
// hag_afterglow_persistence = 0.2


// TNTC = "3" // LUT Colors
// brightboost = "1.35"
// gsl = "1" //Scanline Type
// h_smart = "0.5"
// shadowMask = "7" //CRT Mask
// masksize = "2" //CRT Mask Size
// vertmask = "0.25" //PVM colors
// slotmask = "1" //Slot Mask Strength
// slotwidth = "2" // Slot Mask Width
// double_slot = "2" // Slot Mask Height 2x1 or 4x1
// gamma_out = "2.4"


